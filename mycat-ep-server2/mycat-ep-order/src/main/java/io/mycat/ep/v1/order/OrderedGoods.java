// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `order.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package io.mycat.ep.v1.order;

public class OrderedGoods implements java.lang.Cloneable, java.io.Serializable
{
    public long goodsId;

    public int amount;

    public OrderedGoods()
    {
    }

    public OrderedGoods(long goodsId, int amount)
    {
        this.goodsId = goodsId;
        this.amount = amount;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        OrderedGoods _r = null;
        if(rhs instanceof OrderedGoods)
        {
            _r = (OrderedGoods)rhs;
        }

        if(_r != null)
        {
            if(goodsId != _r.goodsId)
            {
                return false;
            }
            if(amount != _r.amount)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::order::OrderedGoods");
        __h = IceInternal.HashUtil.hashAdd(__h, goodsId);
        __h = IceInternal.HashUtil.hashAdd(__h, amount);
        return __h;
    }

    public OrderedGoods
    clone()
    {
        OrderedGoods c = null;
        try
        {
            c = (OrderedGoods)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeLong(goodsId);
        __os.writeInt(amount);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        goodsId = __is.readLong();
        amount = __is.readInt();
    }

    static public void
    __write(IceInternal.BasicStream __os, OrderedGoods __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public OrderedGoods
    __read(IceInternal.BasicStream __is, OrderedGoods __v)
    {
        if(__v == null)
        {
             __v = new OrderedGoods();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final OrderedGoods __nullMarshalValue = new OrderedGoods();

    public static final long serialVersionUID = 1473674411L;
}
