// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `order.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package io.mycat.ep.v1.order;

public final class OrderHandlerPrxHelper extends Ice.ObjectPrxHelperBase implements OrderHandlerPrx
{
    private static final String __makeOrder_name = "makeOrder";

    public OrderResult makeOrder(OrderInfo info)
    {
        return makeOrder(info, null, false);
    }

    public OrderResult makeOrder(OrderInfo info, java.util.Map<String, String> __ctx)
    {
        return makeOrder(info, __ctx, true);
    }

    private OrderResult makeOrder(OrderInfo info, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__makeOrder_name);
        return end_makeOrder(begin_makeOrder(info, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info)
    {
        return begin_makeOrder(info, null, false, false, null);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, java.util.Map<String, String> __ctx)
    {
        return begin_makeOrder(info, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, Ice.Callback __cb)
    {
        return begin_makeOrder(info, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_makeOrder(info, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, Callback_OrderHandler_makeOrder __cb)
    {
        return begin_makeOrder(info, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, java.util.Map<String, String> __ctx, Callback_OrderHandler_makeOrder __cb)
    {
        return begin_makeOrder(info, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, 
                                           IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_makeOrder(info, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, 
                                           IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_makeOrder(info, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_makeOrder(info, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_makeOrder(OrderInfo info, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_makeOrder(info, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_makeOrder(OrderInfo info, 
                                            java.util.Map<String, String> __ctx, 
                                            boolean __explicitCtx, 
                                            boolean __synchronous, 
                                            IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_makeOrder(info, __ctx, __explicitCtx, __synchronous, 
                               new IceInternal.Functional_TwowayCallbackArg1<io.mycat.ep.v1.order.OrderResult>(__responseCb, __exceptionCb, __sentCb)
                                   {
                                       public final void __completed(Ice.AsyncResult __result)
                                       {
                                           OrderHandlerPrxHelper.__makeOrder_completed(this, __result);
                                       }
                                   });
    }

    private Ice.AsyncResult begin_makeOrder(OrderInfo info, 
                                            java.util.Map<String, String> __ctx, 
                                            boolean __explicitCtx, 
                                            boolean __synchronous, 
                                            IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__makeOrder_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__makeOrder_name, __cb);
        try
        {
            __result.prepare(__makeOrder_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            OrderInfo.__write(__os, info);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public OrderResult end_makeOrder(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __makeOrder_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            OrderResult __ret = null;
            __ret = OrderResult.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __makeOrder_completed(Ice.TwowayCallbackArg1<OrderResult> __cb, Ice.AsyncResult __result)
    {
        io.mycat.ep.v1.order.OrderHandlerPrx __proxy = (io.mycat.ep.v1.order.OrderHandlerPrx)__result.getProxy();
        OrderResult __ret = null;
        try
        {
            __ret = __proxy.end_makeOrder(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __makeOrderFromCart_name = "makeOrderFromCart";

    public OrderResult makeOrderFromCart(CartOrderInfo info)
    {
        return makeOrderFromCart(info, null, false);
    }

    public OrderResult makeOrderFromCart(CartOrderInfo info, java.util.Map<String, String> __ctx)
    {
        return makeOrderFromCart(info, __ctx, true);
    }

    private OrderResult makeOrderFromCart(CartOrderInfo info, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__makeOrderFromCart_name);
        return end_makeOrderFromCart(begin_makeOrderFromCart(info, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info)
    {
        return begin_makeOrderFromCart(info, null, false, false, null);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, java.util.Map<String, String> __ctx)
    {
        return begin_makeOrderFromCart(info, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, Ice.Callback __cb)
    {
        return begin_makeOrderFromCart(info, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_makeOrderFromCart(info, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, Callback_OrderHandler_makeOrderFromCart __cb)
    {
        return begin_makeOrderFromCart(info, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, java.util.Map<String, String> __ctx, Callback_OrderHandler_makeOrderFromCart __cb)
    {
        return begin_makeOrderFromCart(info, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, 
                                                   IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_makeOrderFromCart(info, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, 
                                                   IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_makeOrderFromCart(info, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_makeOrderFromCart(info, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_makeOrderFromCart(info, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_GenericCallback1<OrderResult> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_makeOrderFromCart(info, __ctx, __explicitCtx, __synchronous, 
                                       new IceInternal.Functional_TwowayCallbackArg1<io.mycat.ep.v1.order.OrderResult>(__responseCb, __exceptionCb, __sentCb)
                                           {
                                               public final void __completed(Ice.AsyncResult __result)
                                               {
                                                   OrderHandlerPrxHelper.__makeOrderFromCart_completed(this, __result);
                                               }
                                           });
    }

    private Ice.AsyncResult begin_makeOrderFromCart(CartOrderInfo info, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__makeOrderFromCart_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__makeOrderFromCart_name, __cb);
        try
        {
            __result.prepare(__makeOrderFromCart_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            CartOrderInfo.__write(__os, info);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public OrderResult end_makeOrderFromCart(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __makeOrderFromCart_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            OrderResult __ret = null;
            __ret = OrderResult.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __makeOrderFromCart_completed(Ice.TwowayCallbackArg1<OrderResult> __cb, Ice.AsyncResult __result)
    {
        io.mycat.ep.v1.order.OrderHandlerPrx __proxy = (io.mycat.ep.v1.order.OrderHandlerPrx)__result.getProxy();
        OrderResult __ret = null;
        try
        {
            __ret = __proxy.end_makeOrderFromCart(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    public static OrderHandlerPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), OrderHandlerPrx.class, OrderHandlerPrxHelper.class);
    }

    public static OrderHandlerPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), OrderHandlerPrx.class, OrderHandlerPrxHelper.class);
    }

    public static OrderHandlerPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), OrderHandlerPrx.class, OrderHandlerPrxHelper.class);
    }

    public static OrderHandlerPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), OrderHandlerPrx.class, OrderHandlerPrxHelper.class);
    }

    public static OrderHandlerPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, OrderHandlerPrx.class, OrderHandlerPrxHelper.class);
    }

    public static OrderHandlerPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, OrderHandlerPrx.class, OrderHandlerPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::order::OrderHandler"
    };

    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, OrderHandlerPrx v)
    {
        __os.writeProxy(v);
    }

    public static OrderHandlerPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            OrderHandlerPrxHelper result = new OrderHandlerPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
