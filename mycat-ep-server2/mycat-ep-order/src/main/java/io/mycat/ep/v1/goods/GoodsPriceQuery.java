// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `goods.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package io.mycat.ep.v1.goods;

public class GoodsPriceQuery implements java.lang.Cloneable, java.io.Serializable
{
    public long userId;

    public String token;

    public long[] goodsIds;

    public GoodsPriceQuery()
    {
        token = "";
    }

    public GoodsPriceQuery(long userId, String token, long[] goodsIds)
    {
        this.userId = userId;
        this.token = token;
        this.goodsIds = goodsIds;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        GoodsPriceQuery _r = null;
        if(rhs instanceof GoodsPriceQuery)
        {
            _r = (GoodsPriceQuery)rhs;
        }

        if(_r != null)
        {
            if(userId != _r.userId)
            {
                return false;
            }
            if(token != _r.token)
            {
                if(token == null || _r.token == null || !token.equals(_r.token))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(goodsIds, _r.goodsIds))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::goods::GoodsPriceQuery");
        __h = IceInternal.HashUtil.hashAdd(__h, userId);
        __h = IceInternal.HashUtil.hashAdd(__h, token);
        __h = IceInternal.HashUtil.hashAdd(__h, goodsIds);
        return __h;
    }

    public GoodsPriceQuery
    clone()
    {
        GoodsPriceQuery c = null;
        try
        {
            c = (GoodsPriceQuery)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeLong(userId);
        __os.writeString(token);
        GoodsIdSeqHelper.write(__os, goodsIds);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        userId = __is.readLong();
        token = __is.readString();
        goodsIds = GoodsIdSeqHelper.read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, GoodsPriceQuery __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public GoodsPriceQuery
    __read(IceInternal.BasicStream __is, GoodsPriceQuery __v)
    {
        if(__v == null)
        {
             __v = new GoodsPriceQuery();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final GoodsPriceQuery __nullMarshalValue = new GoodsPriceQuery();

    public static final long serialVersionUID = 1722082946L;
}
