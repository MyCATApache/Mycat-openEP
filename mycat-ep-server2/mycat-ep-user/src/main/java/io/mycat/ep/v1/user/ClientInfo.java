// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `User.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package io.mycat.ep.v1.user;

public class ClientInfo implements java.lang.Cloneable, java.io.Serializable
{
    public String mac;

    public String imei;

    public String openUdid;

    public String idfa;

    public int os;

    public String osVersion;

    public String manufacture;

    public long platformCode;

    public String signature;

    public String packageName;

    public String phone;

    public String verifyCode;

    public String password;

    public String realname;

    public ClientInfo()
    {
        mac = "";
        imei = "";
        openUdid = "";
        idfa = "";
        osVersion = "";
        manufacture = "";
        signature = "";
        packageName = "";
        phone = "";
        verifyCode = "";
        password = "";
        realname = "";
    }

    public ClientInfo(String mac, String imei, String openUdid, String idfa, int os, String osVersion, String manufacture, long platformCode, String signature, String packageName, String phone, String verifyCode, String password, String realname)
    {
        this.mac = mac;
        this.imei = imei;
        this.openUdid = openUdid;
        this.idfa = idfa;
        this.os = os;
        this.osVersion = osVersion;
        this.manufacture = manufacture;
        this.platformCode = platformCode;
        this.signature = signature;
        this.packageName = packageName;
        this.phone = phone;
        this.verifyCode = verifyCode;
        this.password = password;
        this.realname = realname;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ClientInfo _r = null;
        if(rhs instanceof ClientInfo)
        {
            _r = (ClientInfo)rhs;
        }

        if(_r != null)
        {
            if(mac != _r.mac)
            {
                if(mac == null || _r.mac == null || !mac.equals(_r.mac))
                {
                    return false;
                }
            }
            if(imei != _r.imei)
            {
                if(imei == null || _r.imei == null || !imei.equals(_r.imei))
                {
                    return false;
                }
            }
            if(openUdid != _r.openUdid)
            {
                if(openUdid == null || _r.openUdid == null || !openUdid.equals(_r.openUdid))
                {
                    return false;
                }
            }
            if(idfa != _r.idfa)
            {
                if(idfa == null || _r.idfa == null || !idfa.equals(_r.idfa))
                {
                    return false;
                }
            }
            if(os != _r.os)
            {
                return false;
            }
            if(osVersion != _r.osVersion)
            {
                if(osVersion == null || _r.osVersion == null || !osVersion.equals(_r.osVersion))
                {
                    return false;
                }
            }
            if(manufacture != _r.manufacture)
            {
                if(manufacture == null || _r.manufacture == null || !manufacture.equals(_r.manufacture))
                {
                    return false;
                }
            }
            if(platformCode != _r.platformCode)
            {
                return false;
            }
            if(signature != _r.signature)
            {
                if(signature == null || _r.signature == null || !signature.equals(_r.signature))
                {
                    return false;
                }
            }
            if(packageName != _r.packageName)
            {
                if(packageName == null || _r.packageName == null || !packageName.equals(_r.packageName))
                {
                    return false;
                }
            }
            if(phone != _r.phone)
            {
                if(phone == null || _r.phone == null || !phone.equals(_r.phone))
                {
                    return false;
                }
            }
            if(verifyCode != _r.verifyCode)
            {
                if(verifyCode == null || _r.verifyCode == null || !verifyCode.equals(_r.verifyCode))
                {
                    return false;
                }
            }
            if(password != _r.password)
            {
                if(password == null || _r.password == null || !password.equals(_r.password))
                {
                    return false;
                }
            }
            if(realname != _r.realname)
            {
                if(realname == null || _r.realname == null || !realname.equals(_r.realname))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::user::ClientInfo");
        __h = IceInternal.HashUtil.hashAdd(__h, mac);
        __h = IceInternal.HashUtil.hashAdd(__h, imei);
        __h = IceInternal.HashUtil.hashAdd(__h, openUdid);
        __h = IceInternal.HashUtil.hashAdd(__h, idfa);
        __h = IceInternal.HashUtil.hashAdd(__h, os);
        __h = IceInternal.HashUtil.hashAdd(__h, osVersion);
        __h = IceInternal.HashUtil.hashAdd(__h, manufacture);
        __h = IceInternal.HashUtil.hashAdd(__h, platformCode);
        __h = IceInternal.HashUtil.hashAdd(__h, signature);
        __h = IceInternal.HashUtil.hashAdd(__h, packageName);
        __h = IceInternal.HashUtil.hashAdd(__h, phone);
        __h = IceInternal.HashUtil.hashAdd(__h, verifyCode);
        __h = IceInternal.HashUtil.hashAdd(__h, password);
        __h = IceInternal.HashUtil.hashAdd(__h, realname);
        return __h;
    }

    public ClientInfo
    clone()
    {
        ClientInfo c = null;
        try
        {
            c = (ClientInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(mac);
        __os.writeString(imei);
        __os.writeString(openUdid);
        __os.writeString(idfa);
        __os.writeInt(os);
        __os.writeString(osVersion);
        __os.writeString(manufacture);
        __os.writeLong(platformCode);
        __os.writeString(signature);
        __os.writeString(packageName);
        __os.writeString(phone);
        __os.writeString(verifyCode);
        __os.writeString(password);
        __os.writeString(realname);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        mac = __is.readString();
        imei = __is.readString();
        openUdid = __is.readString();
        idfa = __is.readString();
        os = __is.readInt();
        osVersion = __is.readString();
        manufacture = __is.readString();
        platformCode = __is.readLong();
        signature = __is.readString();
        packageName = __is.readString();
        phone = __is.readString();
        verifyCode = __is.readString();
        password = __is.readString();
        realname = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, ClientInfo __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public ClientInfo
    __read(IceInternal.BasicStream __is, ClientInfo __v)
    {
        if(__v == null)
        {
             __v = new ClientInfo();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final ClientInfo __nullMarshalValue = new ClientInfo();

    public static final long serialVersionUID = -1606237512L;
}
